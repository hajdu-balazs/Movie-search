{"version":3,"sources":["Movie/Movie.jsx","App.js","reportWebVitals.js","index.js"],"names":["Movie","title","poster_path","overview","release_date","vote_average","className","src","alt","API","App","useState","movies","setMovies","search","setSearch","onSubmit","e","preventDefault","fetch","then","res","json","data","results","type","placeholder","onChange","target","value","required","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAkCeA,EA7BD,SAAC,GAAD,IACZC,EADY,EACZA,MACAC,EAFY,EAEZA,YACAC,EAHY,EAGZA,SACAC,EAJY,EAIZA,aACAC,EALY,EAKZA,aALY,OAOZ,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBACEC,IACEL,EAdI,mCAeUA,EACV,8GAENM,IAAKP,MAGT,sBAAKK,UAAU,gBAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCD,IAChC,2CACA,4BAAIF,IACJ,oBAAGG,UAAU,eAAb,2BAA2CF,cCrB7CK,EAAG,6DAFO,mCAEP,WA8CMC,MA5Cf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAgBA,OACE,qCACE,yBAAQT,UAAU,SAAlB,UACE,oBAAIA,UAAU,YAAd,0BACA,uBAAMU,SAlBS,SAACC,GACpBA,EAAEC,iBAEFC,MAAMV,EAAMK,GACTM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLV,EAAUU,EAAKC,aAYf,UACE,uBACElB,UAAU,SACVmB,KAAK,OACLC,YAAY,WACZC,SAbW,SAACV,GACpBF,EAAUE,EAAEW,OAAOC,QAaXA,MAAOf,EACPgB,UAAQ,IAEV,uBAAOxB,UAAU,SAASmB,KAAK,SAASI,MAAM,iBAIlD,qBAAKvB,UAAU,kBAAf,SACGM,EAAOmB,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aClCpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ee499b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Movie.css\";\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst Movie = ({\r\n  title,\r\n  poster_path,\r\n  overview,\r\n  release_date,\r\n  vote_average\r\n}) => (\r\n  <div className=\"movie flip-box\">\r\n    <div className=\"flip-box-inner\">\r\n      <div className=\"flip-box-front\">\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? IMG_API + poster_path\r\n              : \"https://thumbs.dreamstime.com/b/no-image-available-icon-photo-camera-flat-vector-illustration-132483141.jpg\"\r\n          }\r\n          alt={title}\r\n        />\r\n      </div>\r\n      <div className=\"flip-box-back\">\r\n        <span className=\"vote_average\">{vote_average}</span>\r\n        <h2>Overview:</h2>\r\n        <p>{overview}</p>\r\n        <p className=\"release_date\">Release date: {release_date}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Movie;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Movie from \"./Movie/Movie\";\n\nconst api_key = \"8dfdfd76c21d4d0227af54af4f2a59b7\";\n\nconst API = `https://api.themoviedb.org/3/search/movie?&api_key=${api_key}&query=`;\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(API + search)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  };\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header-h1\">Movie Search</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"search\"\n            type=\"text\"\n            placeholder=\"Search..\"\n            onChange={handleChange}\n            value={search}\n            required\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Search\" />\n        </form>\n      </header>\n\n      <div className=\"movie-container\">\n        {movies.map((movie) => {\n          return <Movie key={movie.id} {...movie} />;\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}